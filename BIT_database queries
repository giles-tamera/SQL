#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 


#1. How many orders were placed in January? Filter out the blank and incorrect order IDs.

SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone?

SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT acctnum 
FROM BIT_DB.customers customers
LEFT JOIN BIT_DB.FebSales Feb_sales
ON customers.order_id=Feb_sales.orderID
WHERE length(order_id) = 6
AND order_id <> 'Order ID'
AND length(orderID) = 6
AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?

SELECT DISTINCT product, price
FROM BIT_DB.JanSales 
WHERE price IN (SELECT MIN(price) FROM BIT_DB.JanSales)
AND length(orderID) = 6
AND orderID <> 'Order ID';
#OR 
SELECT DISTINCT product, price 
FROM BIT_DB.JanSales 
ORDER BY price ASC LIMIT 1;

#5. What is the total revenue for each product sold in January? (Number of products sold x product price)

SELECT Product, SUM(quantity) * price AS revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product, SUM(quantity) AS amount_sold, SUM(quantity)* price AS revenue
FROM BIT_DB.FebSales
WHERE location= '548 Lincoln St, Seattle, WA 98101'
AND length(orderID) = 6
AND orderID <> 'Order ID';

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT acctnum) AS amount_customers, AVG(quantity * price) AS avg_amount_spent
FROM BIT_DB.FebSales Febsales
LEFT JOIN BIT_DB.customers customers
ON Febsales.orderID = customers.order_id
WHERE Febsales.Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID'
AND length(order_id) = 6
AND order_id <> 'Order ID';

#8.List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT DISTINCT product, SUM(quantity) AS amountsold  
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02/%'
AND location LIKE '%Los Angeles%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product;

#9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT DISTINCT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location 
HAVING COUNT(orderID) >= 3;

#10. How many of each type of headphone were sold in February?

SELECT product, SUM(quantity) AS quantity
FROM BIT_DB.Febsales
WHERE product LIKE '%Headphone%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product;

#11. How much did accounts spend on average in the month of February?

SELECT AVG(price*quantity) AS avg_spent 
FROM BIT_DB.FebSales sales 
LEFT JOIN BIT_DB.customers cust
ON sales.orderID = cust.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND length(order_ID) = 6
AND order_ID <> 'Order ID';

#12. What was the average quantity of products purchased by accounts in February?

SELECT AVG(quantity) 
FROM BIT_DB.Febsales sales
LEFT JOIN BIT_DB.customers cust
ON sales.orderid = cust.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND length(order_ID) = 6
AND order_ID <> 'Order ID';

#13. Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT product, SUM(quantity*price) AS revenue
FROM BIT_DB.JanSales 
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product
ORDER BY price DESC
LIMIT 1;
